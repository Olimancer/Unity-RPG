#if UNITY_EDITOR
using UnityEditor;
using System.IO;
using System.Text;

namespace Game.Utils.Enums {
   public abstract class EnumFileBuilder : EditorWindow {
      protected const string DEFAULT_ENUM_PATH              = "Assets/_Utils/Enums/"; 

      protected string ConvertToVariableName(string str)    { return str.Replace(" ", ""); }


      protected delegate void EnumBuilder(StringBuilder stringBuilder);

      protected void BuildFile(string enumType, EnumBuilder enumBuilder) {
         string filePath = enumType + ".cs";

         //if (!File.Exists(DefaultEnumPath() + filePath)) { File.Create(DefaultEnumPath() + filePath); } // Create the file if non-existant

         StringBuilder stringBuilder = new StringBuilder();
         // Head of file
         stringBuilder.Append("// This enum is autogenerated, do not modify (EnumFileBuilder.cs)\n");
         stringBuilder.Append("// Generation made on: " + System.DateTime.Now.ToString() + "\n");
         stringBuilder.Append("public static class " + enumType + " {\n");

         // Body (enum)
         enumBuilder(stringBuilder);
         
         // Closing file
         stringBuilder.Append("}");

         // Applying change
         AssetDatabase.ImportAsset(DEFAULT_ENUM_PATH + filePath, ImportAssetOptions.ForceUpdate);

         #if !UNITY_WEBPLAYER
            File.WriteAllText(DEFAULT_ENUM_PATH + filePath, stringBuilder.ToString());
         #endif
      }

      // Use this to call RebuildFile in the inherited classes
      abstract public void GenerateEnum();
   }
}
#endif